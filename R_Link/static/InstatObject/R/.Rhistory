pkgs <-
c(
"reshape2",
"lubridate",
"plyr",
"dplyr",
"rtf"
)
library(tidyverse)
package_versions <- tibble::as_tibble(available.packages(filters = "duplicates",
available_packages_filters = "CRAN")) %>%
filter(Package %in% pkgs)
# remove any \n, and any brackets with R versions
get_import_list <- function(imports = package_versions$Imports){
imports_list <- gsub(r"{\s*\([^\)]+\)}","",as.character(imports))
imports_list <- gsub("[\r\n]", "", imports_list)
imports_list <- stringr::str_split(imports_list, pattern = ",")
imports_list <- unlist(imports_list)
imports_list <- gsub("[\r ]", "", imports_list)
return(imports_list)
}
i = 1
list_to_import <- NULL
recursive_import_list <- function(){
imports_list <- get_import_list(imports = package_versions$Imports)
# get packages which are only in the import list, and not in the list of packages
# i.e., get "new" packages
packages_to_import <- setdiff(imports_list, pkgs)
package_versions <- tibble::as_tibble(available.packages(filters = "duplicates",
available_packages_filters = "CRAN")) %>%
filter(Package %in% packages_to_import)
list_to_import[[i]] <- packages_to_import
in_list <- unlist(list_to_import)
i = i+1
new_imports <- unique(c(get_import_list(), in_list))
if (length(setdiff(new_imports, packages_to_import)) != 0){
imports_list <- new_imports
} else {
return(list_to_import)
}
}
pkgs_to_import <- unlist(recursive_import_list())
pkgs_to_import <- unique(c(pkgs_to_import, pkgs))
source("C:/Source/CM82/R-Instat/instat/static/InstatObject/R/Get_packages.R")
sink(file = "c:/Source/packages.txt")
enquote(as.vector(packs))
